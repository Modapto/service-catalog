{"id":"","name":"GitLab Projects Retrival Services","description":"GitLab Projects Retrival Services","public":true,"defaultOperationId":"getTextFile","operations":{"getTextFile":{"name":"getTextFile","description":"getTextFile","isDefault":true,"autostart":true,"configuration":{"connectorId":"org.adoxx.microservice.api.connectors.impl.ContentProviderConnector","outputDescription":"","outputAdaptationAlgorithm":"","statusCheckAlgorithm":"","configStart":{},"configCall":{"content":{"value":""},"fileId":{"value":"$fileId"},"contentType":{"value":"Text"},"contentMIME":{"value":""}},"inputs":{"fileId":{"matchingName":"$fileId","description":"fileId","workingExample":""}}}},"getBase64File":{"name":"getBase64File","description":"getBase64File","isDefault":false,"autostart":false,"configuration":{"connectorId":"org.adoxx.microservice.api.connectors.impl.ContentProviderConnector","outputDescription":"","outputAdaptationAlgorithm":"","statusCheckAlgorithm":"","configStart":{},"configCall":{"content":{"value":""},"fileId":{"value":"$fileId"},"contentType":{"value":"Other"},"contentMIME":{"value":"image/png"}},"inputs":{"fileId":{"matchingName":"$fileId","description":"fileId","workingExample":""}}}},"getLocalFileIdList":{"name":"getLocalFileIdList","description":"getLocalFileIdList","isDefault":false,"autostart":false,"configuration":{"connectorId":"org.adoxx.microservice.api.connectors.impl.ContentProviderConnector","outputDescription":"","outputAdaptationAlgorithm":"","statusCheckAlgorithm":"","configStart":{},"configCall":{"content":{"value":""},"fileId":{"value":"$root"},"contentType":{"value":"List"},"contentMIME":{"value":""}},"inputs":{"root":{"matchingName":"$root","description":"root folder","workingExample":"Experiments"}}}},"getOverviewDataLocal":{"name":"getOverviewDataLocal","description":"getOverviewDataLocal","isDefault":false,"autostart":false,"configuration":{"connectorId":"org.adoxx.microservice.api.connectors.impl.JavascriptEngineConnector","outputDescription":"","outputAdaptationAlgorithm":"","statusCheckAlgorithm":"","configStart":{},"configCall":{"algorithm":{"value":"var localFolder = '$localFolder';\nvar headerList = ['title', 'img', 'excepit'];\nvar imageHeaderName = 'img';\nvar getHeader = function (header, headerName) {\n  var toSearch = '\\n' + headerName + ': ';\n  var headIndex = header.indexOf(toSearch)\n  if (headIndex < 0)\n    return '';\n  var value = header.substring(headIndex + toSearch.length);\n  value = value.substring(0, value.indexOf('\\n'));\n  return value;\n};\nvar ret = [];\nvar mdList = callMicroserviceNT('3e2cd06a-161c-409a-8966-e7b1ea4c336c', 'getLocalFileIdList', {root:{value:localFolder}}).dataList;\nmdList.forEach(function (fileId) {\n  var mdContent = callMicroserviceNT('3e2cd06a-161c-409a-8966-e7b1ea4c336c', 'getTextFile', {fileId:{value:fileId}}).dataText;\n  if (mdContent.startsWith('---')) {\n    var header = mdContent.substring(3);\n    header = header.substring(0, header.indexOf('---'));\n    var retObj = {};\n    retObj.fileId = fileId;\n    headerList.forEach(function (headerName) {\n      retObj[headerName] = getHeader(header, headerName);\n    });\n    var imgFileId = retObj[imageHeaderName];\n    imgFileId = fileId.substring(0, fileId.lastIndexOf('/')) + '/' + imgFileId;\n    var imageB64 = callMicroserviceNT('3e2cd06a-161c-409a-8966-e7b1ea4c336c', 'getBase64File', {fileId:{value:imgFileId}}).dataBase64;\n    retObj[imageHeaderName + 'Url'] = 'data:image/png;base64,' + imageB64;\n    ret.push(retObj);\n  }\n});\nout({\n  list: ret\n});"}},"inputs":{"localFolder":{"matchingName":"$localFolder","description":"localFolder","workingExample":"Experiments"}}}},"getOverviewDataGitlab":{"name":"getOverviewDataGitlab","description":"getOverviewDataGitlab","isDefault":false,"autostart":false,"configuration":{"connectorId":"org.adoxx.microservice.api.connectors.impl.JavascriptEngineConnector","outputDescription":"","outputAdaptationAlgorithm":"","statusCheckAlgorithm":"","configStart":{},"configCall":{"algorithm":{"value":"var gitlabUrl = '$gitlabUrl';\nvar gitlabProjectId = '$gitlabProjectId';\nvar gitlabProjectFolder = '$gitlabProjectFolder';\n\nvar headerList = ['title', 'img', 'excepit'];\nvar imageHeaderName = 'img';\nvar getHeader = function (header, headerName) {\n  var toSearch = '\\n' + headerName + ': ';\n  var headIndex = header.indexOf(toSearch)\n  if (headIndex < 0)\n    return '';\n  var value = header.substring(headIndex + toSearch.length);\n  value = value.substring(0, value.indexOf('\\n'));\n  return value;\n};\nvar searchFileIdByPath = function (gitlabFileList, path) {\n  var ret = '';\n  for (var i = 0; i < gitlabFileList.length; i++) {\n    var metadata = gitlabFileList[i];\n    if (metadata.path = path)\n      ret = metadata.id;\n  };\n  return ret;\n};\n\nvar ret = [];\nvar gitlabListFoldersRESTUrl = gitlabUrl + '/api/v4/projects/' + gitlabProjectId + '/repository/tree?recursive=false&per_page=100&path=' + encodeURI(gitlabProjectFolder);\nvar gitlabFolderList = JSON.parse(callMicroserviceNT('3e2cd06a-161c-409a-8966-e7b1ea4c336c', 'getTextFile', {fileId:{value:gitlabListFoldersRESTUrl}}).dataText);\n\ngitlabFolderList.forEach(function (folder) {\n  if (folder.type != 'tree')\n    return;\n  \n  var gitlabListFilessRESTUrl = gitlabUrl + '/api/v4/projects/' + gitlabProjectId + '/repository/tree?recursive=false&per_page=100&path=' + encodeURI(folder.path);\n  var gitlabFileList = JSON.parse(callMicroserviceNT('3e2cd06a-161c-409a-8966-e7b1ea4c336c', 'getTextFile', {fileId:{value:gitlabListFilessRESTUrl}}).dataText);\n  \n  gitlabFileList.forEach(function (metadata) {\n    if (metadata.type != 'blob' || !metadata.path.endsWith('.md'))\n      return;\n    \n    var gitlabGetFileByIdRESTUrl = gitlabUrl + '/api/v4/projects/' + gitlabProjectId + '/repository/blobs/' + metadata.id + '/raw';\n    var mdContent = callMicroserviceNT('3e2cd06a-161c-409a-8966-e7b1ea4c336c', 'getTextFile', {fileId: {value: gitlabGetFileByIdRESTUrl}}).dataText;\n    \n    if (mdContent.startsWith('---')) {\n      var header = mdContent.substring(3);\n      header = header.substring(0, header.indexOf('---'));\n      var retObj = {};\n      retObj.fileId = gitlabGetFileByIdRESTUrl;\n      headerList.forEach(function (headerName) {\n        retObj[headerName] = getHeader(header, headerName);\n      });\n\n      var imgFilePath = retObj[imageHeaderName];\n      if(retObj[imageHeaderName + 'Url'] == null) {\n        if(imgFilePath == '') {\n            retObj[imageHeaderName + 'Url'] = '';\n        } else if (imgFilePath.startsWith('http')) {\n            retObj[imageHeaderName + 'Url'] = imgFilePath;\n        } else {\n            imgFilePath = metadata.path.substring(0, metadata.path.lastIndexOf('/')) + '/' + imgFilePath;\n            var imgFileId = searchFileIdByPath(gitlabFileList, imgFilePath);\n            var gitlabImageRESTUrl = gitlabUrl + '/api/v4/projects/' + gitlabProjectId + '/repository/blobs/' + imgFileId + '/raw';\n        retObj[imageHeaderName + 'Url'] = gitlabImageRESTUrl;\n        }\n        }\n      ret.push(retObj);\n    }\n  });\n});\n\nout({\n  list: ret\n});"}},"inputs":{"gitlabUrl":{"matchingName":"$gitlabUrl","description":"gitlabUrl","workingExample":"https://git.boc-group.eu"},"gitlabProjectId":{"matchingName":"$gitlabProjectId","description":"gitlabProjectId","workingExample":"186"},"gitlabProjectFolder":{"matchingName":"$gitlabProjectFolder","description":"gitlabProjectFolder","workingExample":"Experiments"}}}},"getHTML":{"name":"getHTML","description":"getHTML","isDefault":false,"autostart":false,"configuration":{"connectorId":"org.adoxx.microservice.api.connectors.impl.JavascriptEngineConnector","outputDescription":"","outputAdaptationAlgorithm":"","statusCheckAlgorithm":"","configStart":{},"configCall":{"algorithm":{"value":"var fileId = '$fileId';\nvar mdContent = callMicroserviceNT('3e2cd06a-161c-409a-8966-e7b1ea4c336c', 'getTextFile', {fileId:{value:fileId}}).dataText;\nload('https://cdn.jsdelivr.net/npm/showdown@1.9.1/dist/showdown.min.js');\nvar converter = new showdown.Converter({\n  omitExtraWLInCodeBlocks: true,\n  noHeaderId: true,\n  simplifiedAutoLink: true,\n  strikethrough: true,\n  tables: true,\n  tasklists: true,\n  openLinksInNewWindow: true,\n  metadata: true\n});\nconverter.setFlavor('github');\nvar html = converter.makeHtml(mdContent);\nout({\n  html: html,\n  metadata: converter.getMetadata()\n});"}},"inputs":{"fileId":{"matchingName":"$fileId","description":"fileId","workingExample":"Experiments/1-Smart Innovation/1-Smart Innovation.md"}}}},"getOverviewDataUrl":{"name":"getOverviewDataUrl","description":"getOverviewDataUrl","isDefault":false,"autostart":false,"configuration":{"connectorId":"org.adoxx.microservice.api.connectors.impl.JavascriptEngineConnector","outputDescription":"","outputAdaptationAlgorithm":"","statusCheckAlgorithm":"","configStart":{},"configCall":{"algorithm":{"value":"var jsonUrl = '$jsonUrl';\nvar headerList = ['title', 'imgUrl', 'excepit'];\n\nvar getHeader = function (header, headerName) {\n  var toSearch = '\\n' + headerName + ': ';\n  var headIndex = header.indexOf(toSearch)\n  if (headIndex < 0)\n    return '';\n  var value = header.substring(headIndex + toSearch.length);\n  value = value.substring(0, value.indexOf('\\n'));\n  return value;\n};\n\nvar ret = [];\nvar projectList = JSON.parse(callMicroserviceNT('3e2cd06a-161c-409a-8966-e7b1ea4c336c', 'getTextFile', {fileId:{value:jsonUrl}}).dataText).projectList;\n\nprojectList.forEach(function (project) {\n  var retObj = project;\n\n  var mdContent = callMicroserviceNT('3e2cd06a-161c-409a-8966-e7b1ea4c336c', 'getTextFile', {fileId: {value: project.fileId}}).dataText;\n  if (mdContent.startsWith('---')) {\n    var header = mdContent.substring(3);\n    header = header.substring(0, header.indexOf('---'));\n    headerList.forEach(function (headerName) {\n      var headerValue = getHeader(header, headerName);\n      if (headerValue)\n        retObj[headerName] = headerValue;\n    });\n  }\n  ret.push(retObj);\n});\n\nout({\n  list: ret\n});"}},"inputs":{"jsonUrl":{"matchingName":"$jsonUrl","description":"jsonUrl","workingExample":"http://127.0.0.1:5500/integration-samples/projects.json"}}}},"getOverviewDataGitlabGroups":{"name":"getOverviewDataGitlabGroups","description":"getOverviewDataGitlabGroups","isDefault":false,"autostart":true,"configuration":{"connectorId":"org.adoxx.microservice.api.connectors.impl.RESTConnector","outputDescription":"{\n  list: [{\n    fileId: '',\n    imgUrl: '',\n    title: '',\n    excepit: ''\n  }]\n}","outputAdaptationAlgorithm":"var ret = [];\noutput.dataJson.projects.forEach(function (project) {\n  if (project.visibility != 'public')\n    return;\n  ret.unshift({\n    fileId: project.readme_url ? project.readme_url.replace('blob', 'raw') : '',\n    imgUrl: project.avatar_url,\n    title: project.name,\n    excepit: project.description\n  });\n});\nout({\n  list: ret\n});","statusCheckAlgorithm":"","configStart":{"method":{"value":"GET"},"requestContentType":{"value":""},"additionalHeaders":{"value":""}},"configCall":{"endpoint":{"value":"$gitlabUrl/api/v4/groups/$gitlabGroupId"},"querystring":{"value":""},"postData":{"value":""}},"inputs":{"gitlabUrl":{"matchingName":"$gitlabUrl","description":"gitlabUrl","workingExample":"https://git.boc-group.eu"},"gitlabGroupId":{"matchingName":"$gitlabGroupId","description":"gitlabGroupId","workingExample":"78"}}}}},"moreInfos":{"ownerHtml":"<a href=\"http://www.adoxx.org\">ADOxx Team</a>","presentationImageUrl":"https://www.adoxx.org/live/image/layout_set_logo?img_id=179909&t=1521267871183","descriptionHtml":"<p>Hello World Microservice</p>","visible":true}}